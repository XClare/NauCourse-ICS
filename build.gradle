plugins {
    id 'application'
    id 'org.jetbrains.kotlin.jvm' version '1.3.61'
}

group 'tool.naucourse.ics'
version '1.0.1'

repositories {
    mavenCentral()
}

compileKotlin {
    kotlinOptions.jvmTarget = '1.8'
}

compileTestKotlin {
    kotlinOptions.jvmTarget = '1.8'
}

sourceSets {
    mainClassName = group + '.Main'
}

def author = 'XClare'
def applicationName = 'NauCourse-ICS'

def defaultManifest = manifest {
    attributes 'Created-By': 'IDEA Gradle ' + author
    attributes 'Extension-Name': applicationName
    attributes 'Specification-Title': applicationName
    attributes 'Specification-Version': this.version
    attributes 'Specification-Vendor': author
    attributes 'Main-Class': mainClassName
}

task pureJar(type: Jar) {
    delete 'build/libs/' + applicationName + '-' + archiveVersion.toString() + '.jar'
    manifest = defaultManifest
    destinationDirectory = file('release')
    from files('build/resources/main')
    from files('build/classes/java/main')
    from files('build/classes/kotlin/main')
}

task completeJar(type: Jar) {
    delete 'build/libs/' + applicationName + '-' + archiveVersion.toString() + '-with-dependencies.jar'
    archiveClassifier.set 'with-dependencies'
    manifest = defaultManifest
    destinationDirectory = file('release')
    from files('build/resources/main')
    from files('build/classes/java/main')
    from files('build/classes/kotlin/main')
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
}

task release(type: Jar, dependsOn: [assemble, pureJar, completeJar])

dependencies {
    compile 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    compile 'com.squareup.okhttp3:okhttp:4.3.1'
    compile 'org.jsoup:jsoup:1.12.1'
    compile 'org.mnode.ical4j:ical4j:3.0.13'
    compile 'org.slf4j:slf4j-simple:1.7.30'
}